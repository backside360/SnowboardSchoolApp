{"version":3,"sources":["entities/quotes/index.ts","containers/BookingContainer.tsx","components/Atoms/Card.tsx","components/Molecules/CardList.tsx","pages/School.tsx"],"names":["Quotes","observable","array","BookingContainer","List","component","useState","history","useHistory","handleClick","React","useCallback","symbol","push","quotes","onClick","BookingCard","name","training","title","style","width","height","borderRadius","map","workout","className","href","Observed","observer","justify","service","Mainpage","Main","header","MenuContainer","MainMenu","body","CardsList"],"mappings":"0MAGaA,E,MAASC,EAAWC,MAAc,ICwChCC,EA3B4B,SAAC,GAAyB,IAAZC,EAAW,EAAtBC,UAAsB,EACpCC,oBAAS,GAD2B,mBAE5DC,GAF4D,UAElDC,eAiBVC,EAAcC,IAAMC,aACxB,SAACC,GAAD,OAAYL,EAAQM,KAAR,mBAAyBD,MACrC,CAACL,IAGH,OAAO,kBAACH,EAAD,CAAMU,OAAQd,EAAQe,QAASN,K,4CC3B3BO,G,OAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,EAAmBH,QAAnB,OACxC,kBAAC,IAAD,CACEI,MAAOF,EACPG,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,aAAc,SAEtDL,EAASM,KAAI,SAACC,GAAD,OACZ,yBAAKC,UAAU,gBACb,uBAAGC,KAAI,mBAAcF,IAAYA,UCkBnCG,EAAWC,aA1BgB,SAAC,GAAiB,IAAfd,EAAc,EAAdA,QAWlC,OACE,kBAAC,IAAD,CAAKe,QAAQ,gBAXE,CACf,CACEb,KAAM,yIACNC,SAAU,CAAC,mDAAY,iCAAS,2DAElC,CACED,KAAM,uEACNC,SAAU,CAAC,mIAA2B,yEAK5BM,KAAI,SAACO,GAAD,OACZ,kBAAC,IAAD,CAAKL,UAAU,QACb,kBAAC,EAAD,CACET,KAAMc,EAAQd,KACdC,SAAUa,EAAQb,SAClBH,QAASA,YCRNiB,UAXY,kBACzB,kBAACC,EAAA,EAAD,CACEC,OAAQ,kBAAM,kBAACC,EAAA,EAAD,CAAe9B,UAAW+B,OACxCC,KAAM,kBACJ,oCACE,kBAAC,EAAD,CAAkBhC,UAAWiC","file":"static/js/4.88aa233f.chunk.js","sourcesContent":["import { observable } from 'mobx';\nimport { IQuote } from './types';\n\nexport const Quotes = observable.array<IQuote>([]);\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { mapQuotesFromApiToStore } from '../entities/quotes/mapping';\nimport { IQuote } from '../entities/quotes/types';\nimport { Quotes } from '../entities/quotes';\n\ninterface IList {\n  quotes: Array<IQuote>;\n  onClick?: (symbol: string) => void;\n}\n\ninterface IProps {\n  component: React.ElementType<IList>;\n}\n\nconst BookingContainer: React.FC<IProps> = ({ component: List }) => {\n  const [loading, setLoading] = useState(true);\n  const history = useHistory();\n\n  // React.useEffect(() => {\n  //   if (!Quotes.length) {\n  //     Promise.all([\n  //       api.company.getProfile('AAPL'),\n  //       api.company.getProfile('GOOGL'),\n  //       api.company.getProfile('TSLA'),\n  //     ]).then((companies) => {\n  //       Quotes.push(...mapQuotesFromApiToStore(companies));\n  //       setLoading(false);\n  //     });\n  //   } else {\n  //     setLoading(false);\n  //   }\n  // }, []);\n\n  const handleClick = React.useCallback(\n    (symbol) => history.push(`/booking/${symbol}`),\n    [history]\n  );\n\n  return <List quotes={Quotes} onClick={handleClick} />;\n};\n\nexport default BookingContainer;\n","import React from 'react';\nimport { Card } from 'antd';\n\nimport './styles.css';\n\nexport type IProps = {\n  name?: string;\n  exchange?: string;\n  marketCapitalization?: number;\n  ticker: string;\n  onClick?: (symbol: string) => void;\n};\n\nexport const BookingCard: React.FC<any> = ({ name, training, onClick }) => (\n  <Card\n    title={name}\n    style={{ width: '400px', height: '100%', borderRadius: '10px' }}\n  >\n    {training.map((workout: any) => (\n      <div className=\"training_col\">\n        <a href={`/booking/${workout}`}>{workout}</a>\n      </div>\n    ))}\n  </Card>\n);\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport { observer } from 'mobx-react';\n\nimport { IQuote } from '../../entities/quotes/types';\nimport { BookingCard } from '../Atoms/Card';\n\ninterface IProps {\n  quotes: IQuote[];\n  onClick?: (symbol: string) => void;\n}\n\nconst CardsList: React.FC<any> = ({ onClick }) => {\n  const serviсes = [\n    {\n      name: 'Записаться на тренировку',\n      training: ['Сноуборд', 'Батут', 'Скейтборд'],\n    },\n    {\n      name: 'О нашей школе',\n      training: ['Площадки для тренировок', 'Наши тренера'],\n    },\n  ];\n  return (\n    <Row justify=\"space-around\">\n      {serviсes.map((service: any) => (\n        <Col className=\"card\">\n          <BookingCard\n            name={service.name}\n            training={service.training}\n            onClick={onClick}\n          />\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nconst Observed = observer(CardsList);\n\nexport { Observed as CardsList };\n","/* eslint-disable @typescript-eslint/no-unused-expressions */\nimport React, { useState, useCallback } from 'react';\n\nimport { Button } from 'antd';\n\nimport { MainLayout } from '../components/Layouts/Main';\nimport MenuContainer from '../containers/MenuContainer';\nimport BookingContainer from '../containers/BookingContainer';\nimport { MainMenu } from '../components/Molecules/MainMenu';\nimport { CardsList } from '../components/Molecules/CardList';\n\nconst Mainpage: React.FC = () => (\n  <MainLayout\n    header={() => <MenuContainer component={MainMenu} />}\n    body={() => (\n      <>\n        <BookingContainer component={CardsList} />\n      </>\n    )}\n  />\n);\n\nexport default Mainpage;\n"],"sourceRoot":""}